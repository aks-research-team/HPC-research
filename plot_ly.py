import re


def fn0(s):
    s = str(s.group(0))
    x, y, z = s.split(":")
    return f"seq({x}, {y}, {z})"


string = """
Unew[2:n-1:2, 2:n-1:2, 2:n-1:2, 0] = (U[2:n-1:2, 2:n-1:2, 2:n-1:2, 0] 
                    - dt * (U[2:n-1:2, 2:n-1:2, 2:n-1:2, 0] + U[4:n+1:2, 2:n-1:2, 2:n-1:2, 0]) * U[3:n:2, 2:n-1:2, 2:n-1:2, 1] / (self.dx * 2)
                    + dt * (U[2:n-1:2, 2:n-1:2, 2:n-1:2, 0] + U[0:n-3:2, 2:n-1:2, 2:n-1:2, 0]) * U[1:n-2:2, 2:n-1:2, 2:n-1:2, 1] / (self.dx * 2)
                    - dt * (U[2:n-1:2, 2:n-1:2, 2:n-1:2, 0] + U[2:n-1:2, 4:n+1:2, 2:n-1:2, 0]) * U[2:n-1:2, 3:n:2, 2:n-1:2, 2] / (self.dy * 2)
                    + dt * (U[2:n-1:2, 2:n-1:2, 2:n-1:2, 0] + U[2:n-1:2, 0:n-3:2, 2:n-1:2, 0]) * U[2:n-1:2, 1:n-2:2, 2:n-1:2, 2] / (self.dy * 2)
                    - dt * (U[2:n-1:2, 2:n-1:2, 2:n-1:2, 0] + U[2:n-1:2, 2:n-1:2, 4:n+1:2, 0]) * U[2:n-1:2, 2:n-1:2, 3:n:2, 3] / (self.dz * 2)
                    + dt * (U[2:n-1:2, 2:n-1:2, 2:n-1:2, 0] + U[2:n-1:2, 2:n-1:2, 0:n-3:2, 0]) * U[2:n-1:2, 2:n-1:2, 1:n-2:2, 3] / (self.dz * 2)
            )
"""

print(re.sub("\d:n[+, -]*\d:2", fn0, string))